{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","minLength","visibleGoods","filter","element","length","ALPABET","sort","good1","good2","localeCompare","LENGTH","reverse","App","state","isStarted","NONE","lengthValue","this","className","type","onClick","setState","map","product","name","onChange","event","target","value","Array","_","i","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EACPC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAe,YAAIJ,GAAOK,QAAO,SAAAC,GAAO,OAC5CA,EAAQC,QAAUJ,KASpB,OANIF,IAAaJ,EAASW,QACxBJ,EAAaK,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAC/CV,IAAaJ,EAASgB,QAC/BT,EAAaK,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMH,OAASI,EAAMJ,UAGpDL,EAAaE,EAAaU,UAAYV,G,SAtB1CP,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgCE,IAAMkB,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXf,YAAY,EACZD,SAAUJ,EAASqB,KACnBC,YAAa,GALjB,4CAQE,WAAU,IAAD,OACP,EAKIC,KAAKJ,MAJPC,EADF,EACEA,UACAf,EAFF,EAEEA,WACAD,EAHF,EAGEA,SACAkB,EAJF,EAIEA,YAGF,OACE,sBAAKE,UAAU,uCAAf,WACIJ,GACA,wBACEK,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEP,WAAW,KAE7BI,UAAU,6BALZ,mBAWDJ,GACC,qCACE,sBAAKI,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEvB,SAAUJ,EAASW,WAErCa,UAAU,0BALZ,iCAUA,wBACEC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEvB,SAAUJ,EAASgB,UAErCQ,UAAU,0BALZ,4BAUA,wBACEC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEtB,YAAaA,KAE/BmB,UAAU,0BALZ,qBAUA,wBACEC,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CACZtB,YAAY,EACZD,SAAUJ,EAASqB,KACnBC,YAAa,KAGjBE,UAAU,4BATZ,sBAeF,oBAAIA,UAAU,+BAAd,SACGtB,EACCD,EACAG,EACAC,EACAiB,GACAM,KAAI,SAAAC,GAAO,OACX,oBACEL,UAAU,cADZ,SAIGK,GAFIA,QAOX,gCACE,mBAAGL,UAAU,OAAb,wCAEA,qBAAKA,UAAU,sCAAf,SACE,wBACEM,KAAK,gBACLC,SAAU,SAACC,GACT,EAAKL,SAAS,CAAEL,aAAcU,EAAMC,OAAOC,SAH/C,SAMG,YAAIC,MAAM,KAAKP,KAAI,SAACQ,EAAGC,GAAJ,OAClB,wBAAQH,MAAOG,EAAI,EAAnB,SAAuBA,EAAI,wBAzG/C,GAAyBC,IAAMC,WC9C/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.757e531c.chunk.js","sourcesContent":["// import { event } from 'cypress/types/jquery';\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  const visibleGoods = [...goods].filter(element => (\n    element.length >= minLength\n  ));\n\n  if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  lengthValue: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n    lengthValue: 1,\n  };\n\n  render() {\n    const {\n      isStarted,\n      isReversed,\n      sortType,\n      lengthValue,\n    } = this.state;\n\n    return (\n      <div className=\"App box has-background-warning-light\">\n        {!isStarted && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isStarted: true });\n            }}\n            className=\"button is-success is-light\"\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted && (\n          <>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.setState({ sortType: SortType.ALPABET });\n                }}\n                className=\"button is-info is-light\"\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.setState({ sortType: SortType.LENGTH });\n                }}\n                className=\"button is-info is-light\"\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.setState({ isReversed: !isReversed });\n                }}\n                className=\"button is-info is-light\"\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.setState({\n                    isReversed: false,\n                    sortType: SortType.NONE,\n                    lengthValue: 1,\n                  });\n                }}\n                className=\"button is-danger is-light\"\n              >\n                Reset\n              </button>\n            </div>\n\n            <ul className=\"Goods content is-large block\">\n              {getReorderedGoods(\n                goodsFromServer,\n                sortType,\n                isReversed,\n                lengthValue,\n              ).map(product => (\n                <li\n                  className=\"Goods__item\"\n                  key={product}\n                >\n                  {product}\n                </li>\n              ))}\n            </ul>\n\n            <div>\n              <p className=\"text\">Select min length of word:</p>\n\n              <div className=\"select is-multiply is-success block\">\n                <select\n                  name=\"minWordLength\"\n                  onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n                    this.setState({ lengthValue: +event.target.value });\n                  }}\n                >\n                  {[...Array(10)].map((_, i) => (\n                    <option value={i + 1}>{i + 1}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}